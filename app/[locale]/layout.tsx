/* eslint-disable @next/next/no-page-custom-font */
import type { Metadata } from 'next';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
import './globals.css';
import AuthProvider from '@/context/AuthContext';
import ErrorBoundary from './ErrorBoundary';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const isArabic = locale === 'ar';

  return (
    <html lang={locale} dir={isArabic ? 'rtl' : 'ltr'}>
      <head>
        <link rel="icon" href="/assets/logo.png" sizes="any" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Arabic&display=swap"
          rel="stylesheet"
        />
      </head>
      <body className={`antialiased`}>
        <ErrorBoundary>
          <AuthProvider>
            <NextIntlClientProvider>{children}</NextIntlClientProvider>
          </AuthProvider>
        </ErrorBoundary>
      </body>
    </html>
  );
}
